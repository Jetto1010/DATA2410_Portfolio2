# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import data_pb2 as data__pb2


class DataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.sendPlayer = channel.unary_unary(
                '/DATA2410_Portfolio2.Data/sendPlayer',
                request_serializer=data__pb2.Player.SerializeToString,
                response_deserializer=data__pb2.Player.FromString,
                )
        self.sendHighScore = channel.unary_unary(
                '/DATA2410_Portfolio2.Data/sendHighScore',
                request_serializer=data__pb2.HighScore.SerializeToString,
                response_deserializer=data__pb2.HighScore.FromString,
                )
        self.sendFruit = channel.unary_unary(
                '/DATA2410_Portfolio2.Data/sendFruit',
                request_serializer=data__pb2.Fruit.SerializeToString,
                response_deserializer=data__pb2.Fruit.FromString,
                )
        self.getPlayers = channel.unary_stream(
                '/DATA2410_Portfolio2.Data/getPlayers',
                request_serializer=data__pb2.NoParameter.SerializeToString,
                response_deserializer=data__pb2.Player.FromString,
                )
        self.getLeaderboard = channel.unary_unary(
                '/DATA2410_Portfolio2.Data/getLeaderboard',
                request_serializer=data__pb2.NoParameter.SerializeToString,
                response_deserializer=data__pb2.Leaderboard.FromString,
                )
        self.getFruits = channel.unary_stream(
                '/DATA2410_Portfolio2.Data/getFruits',
                request_serializer=data__pb2.NoParameter.SerializeToString,
                response_deserializer=data__pb2.Fruit.FromString,
                )


class DataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def sendPlayer(self, request, context):
        """Send to server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendHighScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendFruit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPlayers(self, request, context):
        """Get from server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLeaderboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getFruits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'sendPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.sendPlayer,
                    request_deserializer=data__pb2.Player.FromString,
                    response_serializer=data__pb2.Player.SerializeToString,
            ),
            'sendHighScore': grpc.unary_unary_rpc_method_handler(
                    servicer.sendHighScore,
                    request_deserializer=data__pb2.HighScore.FromString,
                    response_serializer=data__pb2.HighScore.SerializeToString,
            ),
            'sendFruit': grpc.unary_unary_rpc_method_handler(
                    servicer.sendFruit,
                    request_deserializer=data__pb2.Fruit.FromString,
                    response_serializer=data__pb2.Fruit.SerializeToString,
            ),
            'getPlayers': grpc.unary_stream_rpc_method_handler(
                    servicer.getPlayers,
                    request_deserializer=data__pb2.NoParameter.FromString,
                    response_serializer=data__pb2.Player.SerializeToString,
            ),
            'getLeaderboard': grpc.unary_unary_rpc_method_handler(
                    servicer.getLeaderboard,
                    request_deserializer=data__pb2.NoParameter.FromString,
                    response_serializer=data__pb2.Leaderboard.SerializeToString,
            ),
            'getFruits': grpc.unary_stream_rpc_method_handler(
                    servicer.getFruits,
                    request_deserializer=data__pb2.NoParameter.FromString,
                    response_serializer=data__pb2.Fruit.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DATA2410_Portfolio2.Data', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Data(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def sendPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DATA2410_Portfolio2.Data/sendPlayer',
            data__pb2.Player.SerializeToString,
            data__pb2.Player.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendHighScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DATA2410_Portfolio2.Data/sendHighScore',
            data__pb2.HighScore.SerializeToString,
            data__pb2.HighScore.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendFruit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DATA2410_Portfolio2.Data/sendFruit',
            data__pb2.Fruit.SerializeToString,
            data__pb2.Fruit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/DATA2410_Portfolio2.Data/getPlayers',
            data__pb2.NoParameter.SerializeToString,
            data__pb2.Player.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getLeaderboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DATA2410_Portfolio2.Data/getLeaderboard',
            data__pb2.NoParameter.SerializeToString,
            data__pb2.Leaderboard.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getFruits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/DATA2410_Portfolio2.Data/getFruits',
            data__pb2.NoParameter.SerializeToString,
            data__pb2.Fruit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
